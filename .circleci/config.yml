# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
general:
  branches:
    only:
      - development
jobs:
  build:
    docker:
      - image: circleci/ruby:2.4.1-node-browsers
        environment:
          - PG: localhost
          - POSTGRES: postgres
          - RAILS_ENV: test
          - RACK_ENV: test
      - image: postgres:9.6
        environment:
          - POSTGRES_USER: postgres
          - POSTGRES_DB: feedback_app_test

    working_directory: ~/repo

    steps:
      - checkout
      # - restore_cache:
      #     keys:
      #     - v1-dependencies-{{ checksum "Gemfile.lock" }}
      #     - v1-dependencies-
      # - run:
      #     name: install dependencies
      #     command: |
      #       bundle install --jobs=4 --retry=3 --path vendor/bundle
      # - save_cache:
      #     paths:
      #       - ./venv
      #     key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      # - run:
      #     name: Set up DB
      #     command: |
      #       bundle exec rake db:create db:schema:load --trace
      #       bundle exec rake db:migrate
      #     environment:
      #       DATABASE_URL: "postgres://postgres@localhost:5432/feedback_app_test"
      # - run:
      #     name: Run test
      #     command: rake test

      - deploy:
          name: Deploy to development
          command: |
            if [ "${CIRCLE_BRANCH}" == "development" ]; then
              ssh-add "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDXn+Pa6CK0QpNte8OpW+1xop8tMmReJVfi+ceDwShmvW6Ehrpm6rPDfj2e0tkywZx4YSkzY0Vu/zLB1R+omJGfJsf0UjxsybfI0Ssb3PJQasT52LLcrQW8LGmuRxHx/A3L7+z1mLVLX5LVJPB/yCTCLeMPpyLBDuTSU9GJ/XLqDh9VdpETU8b/lsvecJkWU3dWsy7lT/trNbMl7xFcA/UoOVM6eWAQVmaNdyxF0+iWEGshaHBTYpA6LlKcWbnaVx+GPdWlIflYEpkzpx7I3dpBqYDkxYnhXUtJBUi7Mp1Z5l2j8E/qoM+TfdgpAikhTuk7NuDmZlsdEjO+bLqqJDCX yuntjs@circleci.com"
              git push git@heroku.com:ancient-sea-94054 $CIRCLE_SHA1:development
              heroku run rake db:migrate --app ancient-sea-94054
            fi
