# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
general:
  branches:
    only:
      - development
jobs:
  build:
    docker:
      - image: circleci/ruby:2.4.1-node-browsers
        environment:
          - PG: localhost
          - POSTGRES: postgres
          - RAILS_ENV: test
          - RACK_ENV: test
      - image: postgres:9.6
        environment:
          - POSTGRES_USER: postgres
          - POSTGRES_DB: feedback_app_test

    working_directory: ~/repo


    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      # - run:
      #     name: Set up DB
      #     command: |
      #       bundle exec rake db:create db:schema:load --trace
      #       bundle exec rake db:migrate
      #     environment:
      #       DATABASE_URL: "postgres://postgres@localhost:5432/feedback_app_test"
      # - run:
      #     name: Run test
      #     command: rake test


      - setup_remote_docker   # (2)
      - run:
          name: add user to docker group
          command: sudo usermod -aG root $USER
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Build and push new image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t taejunyun/excella-feedback:$TAG
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push taejunyun/excella-feedback:$TAG


      - run: bash .circleci/setup-heroku.sh
      - add_ssh_keys:
          fingerprints:
            - "48:a0:87:54:ca:75:32:12:c6:9e:a2:77:a4:7a:08:a4"
      - deploy:
          name: Deploy development to Heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "development" ]; then
              git push heroku master
            fi

      - deploy:
          name: Deploy development to AWS
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ssh -o "StrictHostKeyChecking no" ubuntu@$AWS_IP env TAG=0.1.$CIRCLE_BUILD_NUM DOCKER_USER=$DOCKER_USER DOCKER_PASS=$DOCKER_PASS 'bash -s' <<'ENDSSH'
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                docker stop excella-feedback
                docker rm excella-feedback
                docker run -d -p 3000:3000 --name excella-feedback -e "RAILS_ENV=production" taejunyun/excella-fb:$TAG
                docker service update --image taejunyun/excella-fb:$TAG --force app_web
              ENDSSH
            fi
